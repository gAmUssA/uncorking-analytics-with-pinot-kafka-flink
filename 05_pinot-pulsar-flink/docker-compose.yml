services:
  jobmanager:
    build:
      context: flink
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        state.backend: filesystem
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        state.savepoints.dir: file:///tmp/flink-savepoints
    volumes:
      - flink-checkpoints:/tmp/flink-checkpoints
      - flink-savepoints:/tmp/flink-savepoints

  taskmanager:
    build:
      context: flink
      dockerfile: Dockerfile
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        state.backend: filesystem
        state.checkpoints.dir: file:///tmp/flink-checkpoints
        state.savepoints.dir: file:///tmp/flink-savepoints
    volumes:
      - flink-checkpoints:/tmp/flink-checkpoints
      - flink-savepoints:/tmp/flink-savepoints
  
  sql-client:
    build:
      context: flink
    container_name: sql-client
    command: bin/sql-client.sh
    #    volumes:
    #      - ./sql/flink-sql-history:/opt/flink/.flink-sql-history
    depends_on:
      - jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
  
  pulsar:
    image: apachepulsar/pulsar:3.3.1
    container_name: pulsar
    hostname: pulsar
    ports:
      - "6650:6650"
      - "8080:8080"
    volumes:
      - pulsardata:/pulsar/data
      - pulsarconf:/pulsar/conf
    command: bin/pulsar standalone
    healthcheck:
      test: [ "CMD", "bin/pulsar-admin", "brokers", "healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  pulsar-producer:
    build:
      context: producer
      dockerfile: Dockerfile
    depends_on:
      pulsar:
        condition: service_healthy
    environment:
      - PULSAR_URL=pulsar://pulsar:6650
      - MOVIE_TOPIC=persistent://public/default/movies
      - RATING_TOPIC=persistent://public/default/ratings
      - LIMIT=100000
      - DATA=/app/data/movies.jsonl
    volumes:
      - ../data:/app/data

  pinot-zookeeper:
    image: zookeeper:latest
    container_name: pinot-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  pinot-controller:
    image: apachepinot/pinot:1.2.0-21-openjdk
    command: "StartController -zkAddress pinot-zookeeper:2181"
    container_name: pinot-controller
    hostname: pinot-controller
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms1G -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xlog:gc:gc-pinot-controller.log"
    depends_on:
      - pinot-zookeeper
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/health || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - ./table/:/tmp/pinot/table/
      - ../data/:/tmp/pinot/data/

  pinot-broker:
    image: apachepinot/pinot:1.2.0-21-openjdk
    command: "StartBroker -zkAddress pinot-zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-broker"
    ports:
      - "8099:8099"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms4G -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xlog:gc:gc-pinot-broker.log"
    depends_on:
      pinot-controller:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8099/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  pinot-server:
    image: apachepinot/pinot:1.2.0-21-openjdk
    command: "StartServer -zkAddress pinot-zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-server"
    ports:
      - "8097:8097"
      - "8098:8098"
    environment:
      JAVA_OPTS: "-Dplugins.dir=/opt/pinot/plugins -Xms4G -Xmx16G -XX:+UseG1GC -XX:MaxGCPauseMillis=200  -Xlog:gc:gc-pinot-server.log"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8097/health/readiness || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    depends_on:
      pinot-controller:
        condition: service_healthy
        
volumes:
  flink-checkpoints:
  flink-savepoints:
  pulsardata:
  pulsarconf:
